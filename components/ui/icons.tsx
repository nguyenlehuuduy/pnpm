'use client'

import * as React from 'react'

import { cn } from '@/lib/utils'

function IconNextChat({
  className,
  inverted,
  ...props
}: React.ComponentProps<'svg'> & { inverted?: boolean }) {
  const id = React.useId()

  return (
    <svg
      viewBox="0 0 17 17"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <defs>
        <linearGradient
          id={`gradient-${id}-1`}
          x1="10.6889"
          y1="10.3556"
          x2="13.8445"
          y2="14.2667"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor={inverted ? 'white' : 'black'} />
          <stop
            offset={1}
            stopColor={inverted ? 'white' : 'black'}
            stopOpacity={0}
          />
        </linearGradient>
        <linearGradient
          id={`gradient-${id}-2`}
          x1="11.7555"
          y1="4.8"
          x2="11.7376"
          y2="9.50002"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor={inverted ? 'white' : 'black'} />
          <stop
            offset={1}
            stopColor={inverted ? 'white' : 'black'}
            stopOpacity={0}
          />
        </linearGradient>
      </defs>
      <path
        d="M1 16L2.58314 11.2506C1.83084 9.74642 1.63835 8.02363 2.04013 6.39052C2.4419 4.75741 3.41171 3.32057 4.776 2.33712C6.1403 1.35367 7.81003 0.887808 9.4864 1.02289C11.1628 1.15798 12.7364 1.8852 13.9256 3.07442C15.1148 4.26363 15.842 5.83723 15.9771 7.5136C16.1122 9.18997 15.6463 10.8597 14.6629 12.224C13.6794 13.5883 12.2426 14.5581 10.6095 14.9599C8.97637 15.3616 7.25358 15.1692 5.74942 14.4169L1 16Z"
        fill={inverted ? 'black' : 'white'}
        stroke={inverted ? 'black' : 'white'}
        strokeWidth={2}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <mask
        id="mask0_91_2047"
        style={{ maskType: 'alpha' }}
        maskUnits="userSpaceOnUse"
        x={1}
        y={0}
        width={16}
        height={16}
      >
        <circle cx={9} cy={8} r={8} fill={inverted ? 'black' : 'white'} />
      </mask>
      <g mask="url(#mask0_91_2047)">
        <circle cx={9} cy={8} r={8} fill={inverted ? 'black' : 'white'} />
        <path
          d="M14.2896 14.0018L7.146 4.8H5.80005V11.1973H6.87681V6.16743L13.4444 14.6529C13.7407 14.4545 14.0231 14.2369 14.2896 14.0018Z"
          fill={`url(#gradient-${id}-1)`}
        />
        <rect
          x="11.2222"
          y="4.8"
          width="1.06667"
          height="6.4"
          fill={`url(#gradient-${id}-2)`}
        />
      </g>
    </svg>
  )
}

function IconOpenAI({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      fill="currentColor"
      viewBox="0 0 24 24"
      role="img"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <title>OpenAI icon</title>
      <path d="M22.2819 9.8211a5.9847 5.9847 0 0 0-.5157-4.9108 6.0462 6.0462 0 0 0-6.5098-2.9A6.0651 6.0651 0 0 0 4.9807 4.1818a5.9847 5.9847 0 0 0-3.9977 2.9 6.0462 6.0462 0 0 0 .7427 7.0966 5.98 5.98 0 0 0 .511 4.9107 6.051 6.051 0 0 0 6.5146 2.9001A5.9847 5.9847 0 0 0 13.2599 24a6.0557 6.0557 0 0 0 5.7718-4.2058 5.9894 5.9894 0 0 0 3.9977-2.9001 6.0557 6.0557 0 0 0-.7475-7.0729zm-9.022 12.6081a4.4755 4.4755 0 0 1-2.8764-1.0408l.1419-.0804 4.7783-2.7582a.7948.7948 0 0 0 .3927-.6813v-6.7369l2.02 1.1686a.071.071 0 0 1 .038.052v5.5826a4.504 4.504 0 0 1-4.4945 4.4944zm-9.6607-4.1254a4.4708 4.4708 0 0 1-.5346-3.0137l.142.0852 4.783 2.7582a.7712.7712 0 0 0 .7806 0l5.8428-3.3685v2.3324a.0804.0804 0 0 1-.0332.0615L9.74 19.9502a4.4992 4.4992 0 0 1-6.1408-1.6464zM2.3408 7.8956a4.485 4.485 0 0 1 2.3655-1.9728V11.6a.7664.7664 0 0 0 .3879.6765l5.8144 3.3543-2.0201 1.1685a.0757.0757 0 0 1-.071 0l-4.8303-2.7865A4.504 4.504 0 0 1 2.3408 7.872zm16.5963 3.8558L13.1038 8.364 15.1192 7.2a.0757.0757 0 0 1 .071 0l4.8303 2.7913a4.4944 4.4944 0 0 1-.6765 8.1042v-5.6772a.79.79 0 0 0-.407-.667zm2.0107-3.0231l-.142-.0852-4.7735-2.7818a.7759.7759 0 0 0-.7854 0L9.409 9.2297V6.8974a.0662.0662 0 0 1 .0284-.0615l4.8303-2.7866a4.4992 4.4992 0 0 1 6.6802 4.66zM8.3065 12.863l-2.02-1.1638a.0804.0804 0 0 1-.038-.0567V6.0742a4.4992 4.4992 0 0 1 7.3757-3.4537l-.142.0805L8.704 5.459a.7948.7948 0 0 0-.3927.6813zm1.0976-2.3654l2.602-1.4998 2.6069 1.4998v2.9994l-2.5974 1.4997-2.6067-1.4997Z" />
    </svg>
  )
}

function IconDoctor({ className, ...props }: React.ComponentProps<'img'>) {
  return (
    <img
      src="/doctor.png"
      className={cn('h-4 w-4', className)}
      alt="doctor image"
    />
  )
}
function IconGg({ className, ...props }: React.ComponentProps<'img'>) {
  return (
    <img
      src="/Assets/gg.png"
      className={cn('h-full w-full', className)}
      alt="doctor image"
    />
  )
}
function IconFb({ className, ...props }: React.ComponentProps<'img'>) {
  return (
    <img
      src="/Assets/fb.png"
      className={cn('h-[42px] w-[42px] m-0 p-0', className)}
      alt="fb image"
    />
  )
}
function ImgSign_in({ className, ...props }: React.ComponentProps<'img'>) {
  return (
    <img
      src="/Assets/log-in.png"
      className={cn('h-full w-full', className)}
      alt="log-in image"
    />
  )
}
function ImgSign_up({ className, ...props }: React.ComponentProps<'img'>) {
  return (
    <img
      src="/Assets/sign-in.png"
      className={cn('h-full w-full', className)}
      alt="log-in image"
    />
  )
}
function IconVolunteer({ className, ...props }: React.ComponentProps<'img'>) {
  return (
    <img
      src="/volunteer.png"
      className={cn('h-4 w-4', className)}
      alt="doctor image"
    />
  )
}

function IconVercel({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      aria-label="Vercel logomark"
      role="img"
      viewBox="0 0 74 64"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path
        d="M37.5896 0.25L74.5396 64.25H0.639648L37.5896 0.25Z"
        fill="currentColor"
      ></path>
    </svg>
  )
}

function IconLogo({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      role="img"
      viewBox="0 0 246 51"
      className={cn('', className)}
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M24.8207 0.500412C21.0215 0.576733 17.7864 3.13601 16.6009 6.6256C16.6052 6.61277 16.6081 6.59966 16.6124 6.5868C15.9794 6.33698 15.3013 6.19735 14.6041 6.19735H5.69818V15.1034C5.69818 15.8031 5.83873 16.4838 6.09056 17.1188C6.09489 17.1174 6.09923 17.1163 6.10356 17.1149C4.77258 17.5736 3.54552 18.3349 2.54684 19.3528C0.859955 21.0697 -0.0436875 23.3106 0.00162501 25.6691C0.0759009 29.4955 2.61685 32.7508 6.07452 33.9209C5.83298 34.5447 5.69818 35.211 5.69818 35.8956V44.8014H14.6041C15.2854 44.8014 15.949 44.6679 16.57 44.4283C16.5664 44.4175 16.5639 44.4059 16.5603 44.3951C16.9891 45.7005 17.7188 46.8971 18.7184 47.8948C20.393 49.5754 22.6251 50.5005 24.9984 50.5005C25.0588 50.5005 25.1189 50.4976 25.1791 50.4976C28.9644 50.4236 32.1919 47.8835 33.389 44.4124C34.0218 44.6621 34.6994 44.8014 35.3963 44.8014H44.3022V35.8956C44.3022 35.196 44.1617 34.5158 43.91 33.8808C45.2357 33.4209 46.4574 32.66 47.4532 31.6449C49.1399 29.9281 50.0435 27.6872 49.9984 25.3287C49.9239 21.4965 47.372 18.2358 43.9046 17.0725C43.9114 17.0747 43.9187 17.0762 43.9255 17.0786C44.1672 16.4548 44.3022 15.7882 44.3022 15.1034V6.19735H35.3963C34.7149 6.19735 34.0518 6.33089 33.4307 6.57003C32.9999 5.27739 32.2738 4.09341 31.2845 3.10588C29.6048 1.42311 27.3815 0.498898 24.9915 0.498863C24.9346 0.498863 24.8778 0.499355 24.8207 0.500412ZM3.01068 25.6148C2.98341 24.0728 3.58286 22.5967 4.69429 21.4642C5.842 20.2956 7.42928 19.6269 9.05268 19.6269H14.5827C17.0889 19.6269 19.1281 17.5878 19.1281 15.0817V9.55167C19.1281 6.2836 21.7094 3.57584 24.881 3.51246H24.9984C26.5707 3.51246 28.0436 4.12101 29.152 5.23547C30.2635 6.34076 30.875 7.81369 30.875 9.3861V15.7114H33.8869V9.72574C34.3168 9.39347 34.8457 9.20922 35.3963 9.20922H41.2901V15.1034C41.2901 15.6543 41.1057 16.1838 40.7731 16.6139H41.1145C41.135 16.6139 41.1548 16.6162 41.175 16.6163C41.1554 16.6163 41.1357 16.615 41.1158 16.615H34.7907H33.8869H30.875H29.9714H26.6582C20.8449 16.615 16.116 21.3439 16.116 27.157V30.4702H19.1281V27.157C19.1281 23.0036 22.5045 19.6269 26.6582 19.6269H29.9714H30.875H33.8869H34.7907H41.1158C44.2906 19.6269 46.926 22.2113 46.9894 25.3859C47.0164 26.9281 46.42 28.4011 45.3055 29.5336C44.158 30.7022 42.5707 31.3738 40.9502 31.3738H35.4171C32.9112 31.3738 30.875 33.41 30.875 35.916V41.446C30.875 44.7141 28.2937 47.4222 25.1189 47.4853L24.9984 47.4885C23.4293 47.4885 21.9563 46.8765 20.8478 45.7654C19.7364 44.657 19.1281 43.1842 19.1281 41.6147V35.2895H16.116V41.6147C16.116 41.6409 16.1177 41.667 16.1179 41.6929C16.1176 41.6664 16.1147 41.6406 16.1147 41.6138V41.2721C15.6847 41.6047 15.155 41.7894 14.6041 41.7894H8.71008V35.8956C8.71008 35.3451 8.8945 34.8158 9.22677 34.3859H15.2124H16.116H19.1281H20.0317H23.3448C29.1551 34.3859 33.8869 29.657 33.8869 23.8439V20.5305H30.875V23.8439C30.875 27.9944 27.4954 31.3738 23.3448 31.3738H20.0317H19.1281H16.116H15.2124H8.88707C5.70938 31.3738 3.07378 28.7896 3.01068 25.6148ZM9.05144 16.6139H9.22695C8.89451 16.1838 8.71008 15.6547 8.71008 15.1034V9.20922H14.6041C15.1553 9.20922 15.6847 9.39347 16.1147 9.72609V9.55202C16.1147 9.52725 16.1174 9.50316 16.1178 9.47839C16.1174 9.50298 16.116 9.52708 16.116 9.55167V15.0817C16.116 15.9282 15.4292 16.615 14.5827 16.615H9.05268C9.0314 16.615 9.01015 16.6163 8.98883 16.6166C9.00973 16.6163 9.03034 16.6139 9.05144 16.6139ZM33.8869 41.2735V35.916C33.8869 35.0727 34.5737 34.3859 35.4171 34.3859H40.7738C41.106 34.8158 41.2901 35.3449 41.2901 35.8956V41.7894H35.3963C34.8454 41.7894 34.3167 41.6055 33.8869 41.2735Z"
        fill="url(#paint0_linear_1_375)"
      />
      <path
        d="M72.196 35.5V27.492L73.232 30.236L64.608 15.9H69.424L76.032 26.904H73.26L79.896 15.9H84.348L75.724 30.236L76.732 27.492V35.5H72.196ZM91.4379 35.724C89.8326 35.724 88.4046 35.388 87.1539 34.716C85.9219 34.044 84.9419 33.1293 84.2139 31.972C83.5046 30.796 83.1499 29.4613 83.1499 27.968C83.1499 26.456 83.5046 25.1213 84.2139 23.964C84.9419 22.788 85.9219 21.8733 87.1539 21.22C88.4046 20.548 89.8326 20.212 91.4379 20.212C93.0246 20.212 94.4432 20.548 95.6939 21.22C96.9446 21.8733 97.9246 22.7787 98.6339 23.936C99.3432 25.0933 99.6979 26.4373 99.6979 27.968C99.6979 29.4613 99.3432 30.796 98.6339 31.972C97.9246 33.1293 96.9446 34.044 95.6939 34.716C94.4432 35.388 93.0246 35.724 91.4379 35.724ZM91.4379 32.14C92.1659 32.14 92.8192 31.972 93.3979 31.636C93.9766 31.3 94.4339 30.824 94.7699 30.208C95.1059 29.5733 95.2739 28.8267 95.2739 27.968C95.2739 27.0907 95.1059 26.344 94.7699 25.728C94.4339 25.112 93.9766 24.636 93.3979 24.3C92.8192 23.964 92.1659 23.796 91.4379 23.796C90.7099 23.796 90.0566 23.964 89.4779 24.3C88.8992 24.636 88.4326 25.112 88.0779 25.728C87.7419 26.344 87.5739 27.0907 87.5739 27.968C87.5739 28.8267 87.7419 29.5733 88.0779 30.208C88.4326 30.824 88.8992 31.3 89.4779 31.636C90.0566 31.972 90.7099 32.14 91.4379 32.14ZM108.974 35.724C107.723 35.724 106.603 35.4813 105.614 34.996C104.643 34.5107 103.887 33.7733 103.346 32.784C102.804 31.776 102.534 30.4973 102.534 28.948V20.436H106.902V28.304C106.902 29.5547 107.163 30.4787 107.686 31.076C108.227 31.6547 108.983 31.944 109.954 31.944C110.626 31.944 111.223 31.804 111.746 31.524C112.268 31.2253 112.679 30.7773 112.978 30.18C113.276 29.564 113.426 28.7987 113.426 27.884V20.436H117.794V35.5H113.65V31.356L114.406 32.56C113.902 33.6053 113.155 34.3987 112.166 34.94C111.195 35.4627 110.131 35.724 108.974 35.724ZM128 35.724C126.227 35.724 124.846 35.276 123.856 34.38C122.867 33.4653 122.372 32.112 122.372 30.32V17.104H126.74V30.264C126.74 30.8987 126.908 31.3933 127.244 31.748C127.58 32.084 128.038 32.252 128.616 32.252C129.307 32.252 129.895 32.0653 130.38 31.692L131.556 34.772C131.108 35.0893 130.567 35.332 129.932 35.5C129.316 35.6493 128.672 35.724 128 35.724ZM120.048 24.132V20.772H130.492V24.132H120.048ZM143.164 20.212C144.359 20.212 145.423 20.4547 146.356 20.94C147.308 21.4067 148.055 22.1347 148.596 23.124C149.138 24.0947 149.408 25.3453 149.408 26.876V35.5H145.04V27.548C145.04 26.3347 144.77 25.4387 144.228 24.86C143.706 24.2813 142.959 23.992 141.988 23.992C141.298 23.992 140.672 24.1413 140.112 24.44C139.571 24.72 139.142 25.1587 138.824 25.756C138.526 26.3533 138.376 27.1187 138.376 28.052V35.5H134.008V14.724H138.376V24.608L137.396 23.348C137.938 22.34 138.712 21.5653 139.72 21.024C140.728 20.4827 141.876 20.212 143.164 20.212ZM160.116 35.836C158.548 35.836 157.045 35.6307 155.608 35.22C154.17 34.7907 153.013 34.24 152.136 33.568L153.676 30.152C154.516 30.7493 155.505 31.244 156.644 31.636C157.801 32.0093 158.968 32.196 160.144 32.196C161.04 32.196 161.758 32.112 162.3 31.944C162.86 31.7573 163.27 31.5053 163.532 31.188C163.793 30.8707 163.924 30.5067 163.924 30.096C163.924 29.5733 163.718 29.1627 163.308 28.864C162.897 28.5467 162.356 28.2947 161.684 28.108C161.012 27.9027 160.265 27.716 159.444 27.548C158.641 27.3613 157.829 27.1373 157.008 26.876C156.205 26.6147 155.468 26.2787 154.796 25.868C154.124 25.4573 153.573 24.916 153.144 24.244C152.733 23.572 152.528 22.7133 152.528 21.668C152.528 20.548 152.826 19.5307 153.424 18.616C154.04 17.6827 154.954 16.9453 156.168 16.404C157.4 15.844 158.94 15.564 160.788 15.564C162.02 15.564 163.233 15.7133 164.428 16.012C165.622 16.292 166.677 16.7213 167.592 17.3L166.192 20.744C165.277 20.2213 164.362 19.8387 163.448 19.596C162.533 19.3347 161.637 19.204 160.76 19.204C159.882 19.204 159.164 19.3067 158.604 19.512C158.044 19.7173 157.642 19.988 157.4 20.324C157.157 20.6413 157.036 21.0147 157.036 21.444C157.036 21.948 157.241 22.3587 157.652 22.676C158.062 22.9747 158.604 23.2173 159.276 23.404C159.948 23.5907 160.685 23.7773 161.488 23.964C162.309 24.1507 163.121 24.3653 163.924 24.608C164.745 24.8507 165.492 25.1773 166.164 25.588C166.836 25.9987 167.377 26.54 167.788 27.212C168.217 27.884 168.432 28.7333 168.432 29.76C168.432 30.8613 168.124 31.8693 167.508 32.784C166.892 33.6987 165.968 34.436 164.736 34.996C163.522 35.556 161.982 35.836 160.116 35.836ZM178.391 35.724C176.786 35.724 175.358 35.388 174.107 34.716C172.875 34.044 171.895 33.1293 171.167 31.972C170.458 30.796 170.103 29.4613 170.103 27.968C170.103 26.456 170.458 25.1213 171.167 23.964C171.895 22.788 172.875 21.8733 174.107 21.22C175.358 20.548 176.786 20.212 178.391 20.212C179.978 20.212 181.396 20.548 182.647 21.22C183.898 21.8733 184.878 22.7787 185.587 23.936C186.296 25.0933 186.651 26.4373 186.651 27.968C186.651 29.4613 186.296 30.796 185.587 31.972C184.878 33.1293 183.898 34.044 182.647 34.716C181.396 35.388 179.978 35.724 178.391 35.724ZM178.391 32.14C179.119 32.14 179.772 31.972 180.351 31.636C180.93 31.3 181.387 30.824 181.723 30.208C182.059 29.5733 182.227 28.8267 182.227 27.968C182.227 27.0907 182.059 26.344 181.723 25.728C181.387 25.112 180.93 24.636 180.351 24.3C179.772 23.964 179.119 23.796 178.391 23.796C177.663 23.796 177.01 23.964 176.431 24.3C175.852 24.636 175.386 25.112 175.031 25.728C174.695 26.344 174.527 27.0907 174.527 27.968C174.527 28.8267 174.695 29.5733 175.031 30.208C175.386 30.824 175.852 31.3 176.431 31.636C177.01 31.972 177.663 32.14 178.391 32.14ZM195.927 35.724C194.676 35.724 193.556 35.4813 192.567 34.996C191.596 34.5107 190.84 33.7733 190.299 32.784C189.757 31.776 189.487 30.4973 189.487 28.948V20.436H193.855V28.304C193.855 29.5547 194.116 30.4787 194.639 31.076C195.18 31.6547 195.936 31.944 196.907 31.944C197.579 31.944 198.176 31.804 198.699 31.524C199.221 31.2253 199.632 30.7773 199.931 30.18C200.229 29.564 200.379 28.7987 200.379 27.884V20.436H204.747V35.5H200.603V31.356L201.359 32.56C200.855 33.6053 200.108 34.3987 199.119 34.94C198.148 35.4627 197.084 35.724 195.927 35.724ZM217.949 20.212C219.144 20.212 220.208 20.4547 221.141 20.94C222.093 21.4067 222.84 22.1347 223.381 23.124C223.923 24.0947 224.193 25.3453 224.193 26.876V35.5H219.825V27.548C219.825 26.3347 219.555 25.4387 219.013 24.86C218.491 24.2813 217.744 23.992 216.773 23.992C216.083 23.992 215.457 24.1413 214.897 24.44C214.356 24.72 213.927 25.1587 213.609 25.756C213.311 26.3533 213.161 27.1187 213.161 28.052V35.5H208.793V20.436H212.965V24.608L212.181 23.348C212.723 22.34 213.497 21.5653 214.505 21.024C215.513 20.4827 216.661 20.212 217.949 20.212ZM234.73 35.724C233.311 35.724 232.033 35.4067 230.894 34.772C229.755 34.1187 228.85 33.2133 228.178 32.056C227.525 30.8987 227.198 29.536 227.198 27.968C227.198 26.3813 227.525 25.0093 228.178 23.852C228.85 22.6947 229.755 21.7987 230.894 21.164C232.033 20.5293 233.311 20.212 234.73 20.212C235.999 20.212 237.11 20.492 238.062 21.052C239.014 21.612 239.751 22.4613 240.274 23.6C240.797 24.7387 241.058 26.1947 241.058 27.968C241.058 29.7227 240.806 31.1787 240.302 32.336C239.798 33.4747 239.07 34.324 238.118 34.884C237.185 35.444 236.055 35.724 234.73 35.724ZM235.486 32.14C236.195 32.14 236.839 31.972 237.418 31.636C237.997 31.3 238.454 30.824 238.79 30.208C239.145 29.5733 239.322 28.8267 239.322 27.968C239.322 27.0907 239.145 26.344 238.79 25.728C238.454 25.112 237.997 24.636 237.418 24.3C236.839 23.964 236.195 23.796 235.486 23.796C234.758 23.796 234.105 23.964 233.526 24.3C232.947 24.636 232.481 25.112 232.126 25.728C231.79 26.344 231.622 27.0907 231.622 27.968C231.622 28.8267 231.79 29.5733 232.126 30.208C232.481 30.824 232.947 31.3 233.526 31.636C234.105 31.972 234.758 32.14 235.486 32.14ZM239.434 35.5V32.42L239.518 27.94L239.238 23.488V14.724H243.606V35.5H239.434Z"
        fill="#EFF0F1"
      />
      <defs>
        <linearGradient
          id="paint0_linear_1_375"
          x1="50"
          y1="20.6261"
          x2="6.02412e-07"
          y2="20.6261"
          gradientUnits="userSpaceOnUse"
        >
          <stop stop-color="#007D6E" />
          <stop offset="1" stop-color="#5EB47C" />
        </linearGradient>
      </defs>
    </svg>
  )
}

function IconGitHub({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      role="img"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <title>GitHub</title>
      <path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12" />
    </svg>
  )
}

function IconSeparator({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      fill="none"
      shapeRendering="geometricPrecision"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="1"
      viewBox="0 0 24 24"
      aria-hidden="true"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M16.88 3.549L7.12 20.451"></path>
    </svg>
  )
}

function IconArrowDown({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="m205.66 149.66-72 72a8 8 0 0 1-11.32 0l-72-72a8 8 0 0 1 11.32-11.32L120 196.69V40a8 8 0 0 1 16 0v156.69l58.34-58.35a8 8 0 0 1 11.32 11.32Z" />
    </svg>
  )
}

function IconArrowRight({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="m221.66 133.66-72 72a8 8 0 0 1-11.32-11.32L196.69 136H40a8 8 0 0 1 0-16h156.69l-58.35-58.34a8 8 0 0 1 11.32-11.32l72 72a8 8 0 0 1 0 11.32Z" />
    </svg>
  )
}

function IconUser({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M230.92 212c-15.23-26.33-38.7-45.21-66.09-54.16a72 72 0 1 0-73.66 0c-27.39 8.94-50.86 27.82-66.09 54.16a8 8 0 1 0 13.85 8c18.84-32.56 52.14-52 89.07-52s70.23 19.44 89.07 52a8 8 0 1 0 13.85-8ZM72 96a56 56 0 1 1 56 56 56.06 56.06 0 0 1-56-56Z" />
    </svg>
  )
}

function IconPlus({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M224 128a8 8 0 0 1-8 8h-80v80a8 8 0 0 1-16 0v-80H40a8 8 0 0 1 0-16h80V40a8 8 0 0 1 16 0v80h80a8 8 0 0 1 8 8Z" />
    </svg>
  )
}

function IconArrowElbow({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M200 32v144a8 8 0 0 1-8 8H67.31l34.35 34.34a8 8 0 0 1-11.32 11.32l-48-48a8 8 0 0 1 0-11.32l48-48a8 8 0 0 1 11.32 11.32L67.31 168H184V32a8 8 0 0 1 16 0Z" />
    </svg>
  )
}

function IconSpinner({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4 animate-spin', className)}
      {...props}
    >
      <path d="M232 128a104 104 0 0 1-208 0c0-41 23.81-78.36 60.66-95.27a8 8 0 0 1 6.68 14.54C60.15 61.59 40 93.27 40 128a88 88 0 0 0 176 0c0-34.73-20.15-66.41-51.34-80.73a8 8 0 0 1 6.68-14.54C208.19 49.64 232 87 232 128Z" />
    </svg>
  )
}

function IconMessage({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M216 48H40a16 16 0 0 0-16 16v160a15.84 15.84 0 0 0 9.25 14.5A16.05 16.05 0 0 0 40 240a15.89 15.89 0 0 0 10.25-3.78.69.69 0 0 0 .13-.11L82.5 208H216a16 16 0 0 0 16-16V64a16 16 0 0 0-16-16ZM40 224Zm176-32H82.5a16 16 0 0 0-10.3 3.75l-.12.11L40 224V64h176Z" />
    </svg>
  )
}

function IconTrash({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M216 48h-40v-8a24 24 0 0 0-24-24h-48a24 24 0 0 0-24 24v8H40a8 8 0 0 0 0 16h8v144a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16V64h8a8 8 0 0 0 0-16ZM96 40a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v8H96Zm96 168H64V64h128Zm-80-104v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Zm48 0v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Z" />
    </svg>
  )
}

function IconRefresh({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M197.67 186.37a8 8 0 0 1 0 11.29C196.58 198.73 170.82 224 128 224c-37.39 0-64.53-22.4-80-39.85V208a8 8 0 0 1-16 0v-48a8 8 0 0 1 8-8h48a8 8 0 0 1 0 16H55.44C67.76 183.35 93 208 128 208c36 0 58.14-21.46 58.36-21.68a8 8 0 0 1 11.31.05ZM216 40a8 8 0 0 0-8 8v23.85C192.53 54.4 165.39 32 128 32c-42.82 0-68.58 25.27-69.66 26.34a8 8 0 0 0 11.3 11.34C69.86 69.46 92 48 128 48c35 0 60.24 24.65 72.56 40H168a8 8 0 0 0 0 16h48a8 8 0 0 0 8-8V48a8 8 0 0 0-8-8Z" />
    </svg>
  )
}

function IconStop({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M128 24a104 104 0 1 0 104 104A104.11 104.11 0 0 0 128 24Zm0 192a88 88 0 1 1 88-88 88.1 88.1 0 0 1-88 88Zm24-120h-48a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8Zm-8 48h-32v-32h32Z" />
    </svg>
  )
}

function IconSidebar({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M216 40H40a16 16 0 0 0-16 16v144a16 16 0 0 0 16 16h176a16 16 0 0 0 16-16V56a16 16 0 0 0-16-16ZM40 56h40v144H40Zm176 144H96V56h120v144Z" />
    </svg>
  )
}

function IconMoon({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M233.54 142.23a8 8 0 0 0-8-2 88.08 88.08 0 0 1-109.8-109.8 8 8 0 0 0-10-10 104.84 104.84 0 0 0-52.91 37A104 104 0 0 0 136 224a103.09 103.09 0 0 0 62.52-20.88 104.84 104.84 0 0 0 37-52.91 8 8 0 0 0-1.98-7.98Zm-44.64 48.11A88 88 0 0 1 65.66 67.11a89 89 0 0 1 31.4-26A106 106 0 0 0 96 56a104.11 104.11 0 0 0 104 104 106 106 0 0 0 14.92-1.06 89 89 0 0 1-26.02 31.4Z" />
    </svg>
  )
}

function IconSun({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M120 40V16a8 8 0 0 1 16 0v24a8 8 0 0 1-16 0Zm72 88a64 64 0 1 1-64-64 64.07 64.07 0 0 1 64 64Zm-16 0a48 48 0 1 0-48 48 48.05 48.05 0 0 0 48-48ZM58.34 69.66a8 8 0 0 0 11.32-11.32l-16-16a8 8 0 0 0-11.32 11.32Zm0 116.68-16 16a8 8 0 0 0 11.32 11.32l16-16a8 8 0 0 0-11.32-11.32ZM192 72a8 8 0 0 0 5.66-2.34l16-16a8 8 0 0 0-11.32-11.32l-16 16A8 8 0 0 0 192 72Zm5.66 114.34a8 8 0 0 0-11.32 11.32l16 16a8 8 0 0 0 11.32-11.32ZM48 128a8 8 0 0 0-8-8H16a8 8 0 0 0 0 16h24a8 8 0 0 0 8-8Zm80 80a8 8 0 0 0-8 8v24a8 8 0 0 0 16 0v-24a8 8 0 0 0-8-8Zm112-88h-24a8 8 0 0 0 0 16h24a8 8 0 0 0 0-16Z" />
    </svg>
  )
}

function IconCopy({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M216 32H88a8 8 0 0 0-8 8v40H40a8 8 0 0 0-8 8v128a8 8 0 0 0 8 8h128a8 8 0 0 0 8-8v-40h40a8 8 0 0 0 8-8V40a8 8 0 0 0-8-8Zm-56 176H48V96h112Zm48-48h-32V88a8 8 0 0 0-8-8H96V48h112Z" />
    </svg>
  )
}

function IconCheck({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="m229.66 77.66-128 128a8 8 0 0 1-11.32 0l-56-56a8 8 0 0 1 11.32-11.32L96 188.69 218.34 66.34a8 8 0 0 1 11.32 11.32Z" />
    </svg>
  )
}

function IconDownload({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M224 152v56a16 16 0 0 1-16 16H48a16 16 0 0 1-16-16v-56a8 8 0 0 1 16 0v56h160v-56a8 8 0 0 1 16 0Zm-101.66 5.66a8 8 0 0 0 11.32 0l40-40a8 8 0 0 0-11.32-11.32L136 132.69V40a8 8 0 0 0-16 0v92.69l-26.34-26.35a8 8 0 0 0-11.32 11.32Z" />
    </svg>
  )
}

function IconClose({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M205.66 194.34a8 8 0 0 1-11.32 11.32L128 139.31l-66.34 66.35a8 8 0 0 1-11.32-11.32L116.69 128 50.34 61.66a8 8 0 0 1 11.32-11.32L128 116.69l66.34-66.35a8 8 0 0 1 11.32 11.32L139.31 128Z" />
    </svg>
  )
}

function IconEdit({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10"
      />
    </svg>
  )
}

function IconShare({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="m237.66 106.35-80-80A8 8 0 0 0 144 32v40.35c-25.94 2.22-54.59 14.92-78.16 34.91-28.38 24.08-46.05 55.11-49.76 87.37a12 12 0 0 0 20.68 9.58c11-11.71 50.14-48.74 107.24-52V192a8 8 0 0 0 13.66 5.65l80-80a8 8 0 0 0 0-11.3ZM160 172.69V144a8 8 0 0 0-8-8c-28.08 0-55.43 7.33-81.29 21.8a196.17 196.17 0 0 0-36.57 26.52c5.8-23.84 20.42-46.51 42.05-64.86C99.41 99.77 127.75 88 152 88a8 8 0 0 0 8-8V51.32L220.69 112Z" />
    </svg>
  )
}

function IconUsers({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M117.25 157.92a60 60 0 1 0-66.5 0 95.83 95.83 0 0 0-47.22 37.71 8 8 0 1 0 13.4 8.74 80 80 0 0 1 134.14 0 8 8 0 0 0 13.4-8.74 95.83 95.83 0 0 0-47.22-37.71ZM40 108a44 44 0 1 1 44 44 44.05 44.05 0 0 1-44-44Zm210.14 98.7a8 8 0 0 1-11.07-2.33A79.83 79.83 0 0 0 172 168a8 8 0 0 1 0-16 44 44 0 1 0-16.34-84.87 8 8 0 1 1-5.94-14.85 60 60 0 0 1 55.53 105.64 95.83 95.83 0 0 1 47.22 37.71 8 8 0 0 1-2.33 11.07Z" />
    </svg>
  )
}

function IconExternalLink({
  className,
  ...props
}: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M224 104a8 8 0 0 1-16 0V59.32l-66.33 66.34a8 8 0 0 1-11.32-11.32L196.68 48H152a8 8 0 0 1 0-16h64a8 8 0 0 1 8 8Zm-40 24a8 8 0 0 0-8 8v72H48V80h72a8 8 0 0 0 0-16H48a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-72a8 8 0 0 0-8-8Z" />
    </svg>
  )
}

function IconChevronUpDown({
  className,
  ...props
}: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M181.66 170.34a8 8 0 0 1 0 11.32l-48 48a8 8 0 0 1-11.32 0l-48-48a8 8 0 0 1 11.32-11.32L128 212.69l42.34-42.35a8 8 0 0 1 11.32 0Zm-96-84.68L128 43.31l42.34 42.35a8 8 0 0 0 11.32-11.32l-48-48a8 8 0 0 0-11.32 0l-48 48a8 8 0 0 0 11.32 11.32Z" />
    </svg>
  )
}

function IconRecord({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="32"
      height="32"
      fill="currentColor"
      viewBox="0 0 256 256"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M128,24A104,104,0,1,0,232,128,104.11,104.11,0,0,0,128,24Zm0,192a88,88,0,1,1,88-88A88.1,88.1,0,0,1,128,216Z"></path>
      <circle cx="128" cy="128" r="72"></circle>
    </svg>
  )
}

function IconUpload({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="32"
      height="32"
      fill="currentColor"
      viewBox="0 0 256 256"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M224,152v56a16,16,0,0,1-16,16H48a16,16,0,0,1-16-16V152a8,8,0,0,1,16,0v56H208V152a8,8,0,0,1,16,0ZM88,88h32v64a8,8,0,0,0,16,0V88h32a8,8,0,0,0,5.66-13.66l-40-40a8,8,0,0,0-11.32,0l-40,40A8,8,0,0,0,88,88Z"></path>
    </svg>
  )
}

export {
  IconFb,
  IconGg,
  ImgSign_in,
  ImgSign_up,
  IconEdit,
  IconNextChat,
  IconOpenAI,
  IconVercel,
  IconGitHub,
  IconSeparator,
  IconArrowDown,
  IconArrowRight,
  IconUser,
  IconPlus,
  IconArrowElbow,
  IconSpinner,
  IconMessage,
  IconTrash,
  IconRefresh,
  IconStop,
  IconSidebar,
  IconMoon,
  IconSun,
  IconCopy,
  IconCheck,
  IconDownload,
  IconClose,
  IconShare,
  IconUsers,
  IconExternalLink,
  IconChevronUpDown,
  IconRecord,
  IconUpload,
  IconDoctor,
  IconVolunteer,
  IconLogo
}
